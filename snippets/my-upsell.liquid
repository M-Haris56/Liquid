{%- comment -%}
  Upsell via product metafield: custom.my_up_sell
  Robust handling for:
  - single product_reference
  - list.product_reference (takes first)
  Shows image, title, price, and AJAX Add to Cart (adds UPSALE product, not main).
{%- endcomment -%}

{%- assign mf = product.metafields.custom.my_up_sell -%}
{%- assign upsell = nil -%}

{%- if mf and mf != blank -%}
  {%- assign val = mf.value -%}
  {%- if val and val != blank -%}
    {%- if mf.type and mf.type contains 'list.' -%}
      {%- assign upsell = val | first -%}
    {%- else -%}
      {%- assign upsell = val -%}
    {%- endif -%}
  {%- endif -%}
{%- endif -%}

{%- if upsell and upsell != blank -%}
  {%- assign v = upsell.selected_or_first_available_variant -%}
  {%- assign plan_id = nil -%}
  {%- if v and v.selling_plan_allocations and v.selling_plan_allocations.size > 0 -%}
    {%- assign plan_id = v.selling_plan_allocations.first.selling_plan.id -%}
  {%- endif -%}

  <div class="upsell-wrap" id="upsell-{{ upsell.id }}">
    <div class="upsell-card">
      <!-- LEFT: Check button (no text) -->
      <div class="upsell-check-col">
        {%- if v and v.available -%}
          <label class="upsell-check-wrap" aria-label="{{ 'products.product.add_to_cart' | t }}">
            <input
              type="checkbox"
              class="upsell-check sr-only"
              data-variant-id="{{ v.id }}"
              data-qty="{{ v.quantity_rule.min | default: 1 }}"
              data-step="{{ v.quantity_rule.increment | default: 1 }}"
              {% if plan_id %}data-selling-plan="{{ plan_id }}"{% endif %}
            >
            <span class="custom-check" aria-hidden="true"></span>
          </label>
        {%- else -%}
          <span class="upsell-badge-soldout">{{ 'products.product.sold_out' | t }}</span>
        {%- endif -%}
      </div>

      <!-- MIDDLE: Image -->
      <a href="{{ upsell.url }}" class="upsell-image" aria-label="{{ upsell.title | escape }}">
        {%- if upsell.featured_image -%}
          {%- assign img = upsell.featured_image -%}
          <img
            src="{{ img | image_url: width: 360 }}"
            srcset="
              {{ img | image_url: width: 165 }} 165w,
              {{ img | image_url: width: 360 }} 360w,
              {{ img | image_url: width: 533 }} 533w,
              {{ img | image_url: width: 720 }} 720w,
              {{ img | image_url: width: 940 }} 940w,
              {{ img | image_url: width: 1200 }} 1200w"
            sizes="(max-width: 640px) 100vw, 360px"
            alt="{{ upsell.title | escape }}"
            loading="lazy"
            class="upsell-img"
          >
        {%- else -%}
          <div class="upsell-placeholder" aria-hidden="true">No image</div>
        {%- endif -%}
      </a>

      <!-- RIGHT: Info -->
      <div class="upsell-info">
        <h3 class="upsell-title">
          <a href="{{ upsell.url }}">{{ upsell.title }}</a>
        </h3>

        <div class="upsell-price">
          {%- assign now_price = upsell.price -%}
          {%- assign compare = upsell.compare_at_price -%}
          {%- if compare and compare > now_price -%}
            <span class="upsell-price-was">{{ compare | money }}</span>
          {%- endif -%}
          <span class="upsell-price-now">{{ now_price | money }}</span>
        </div>

        <small class="upsell-msg" hidden></small>
      </div>
    </div>
  </div>

  <script>
    (function() {
      const wrap = document.getElementById('upsell-{{ upsell.id }}');
      if (!wrap) return;

      const cb = wrap.querySelector('.upsell-check[data-variant-id]');
      const msg = wrap.querySelector('.upsell-msg');

      if (!cb) return;

      function normalizeQty(el) {
        const min = parseInt(el.dataset.qty || '1', 10) || 1;
        const step = parseInt(el.dataset.step || '1', 10) || 1;
        let q = min;
        if (q % step !== 0) q = Math.ceil(q / step) * step;
        return q;
      }

      function extractError(data) {
        if (!data) return 'Could not add to cart.';
        if (data.description) return data.description;
        if (data.message) return data.message;
        if (typeof data.errors === 'string') return data.errors;
        if (typeof data.errors === 'object') {
          try { return Object.values(data.errors).flat().join(' '); } catch(e) {}
        }
        return 'Could not add to cart.';
      }

      cb.addEventListener('change', async () => {
        // Only act when checked; uncheck par kuch na kare
        if (!cb.checked) return;

        const variantId = cb.dataset.variantId;
        const sellingPlan = cb.dataset.sellingPlan;
        const quantity = normalizeQty(cb);
        cb.disabled = true;
        if (msg) { msg.hidden = true; msg.textContent = ''; }

        try {
          const item = { id: Number(variantId), quantity };
          if (sellingPlan) item.selling_plan = Number(sellingPlan);

          const res = await fetch('{{ routes.cart_add_url }}.js', {
            method: 'POST',
            credentials: 'same-origin',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json',
              'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ items: [item] })
          });

          const data = await res.json();
          if (!res.ok) throw data;

          // Broadcast for themes/listeners (cart drawer, analytics, etc.)
          document.dispatchEvent(new CustomEvent('cart:added', { detail: data }));

          // Dawn/OS2.0 patterns: update cart UI if available
          const drawer = document.querySelector('cart-drawer, cart-notification');
          if (drawer && typeof drawer.renderContents === 'function') {
            await drawer.renderContents(data);
          }

          if (msg) {
            msg.textContent = '{{ "products.product.added_to_cart" | t | escape }}';
            msg.hidden = false;
          }
        } catch (err) {
          if (msg) {
            msg.textContent = extractError(err);
            msg.hidden = false;
          }
          // error ki surat me checkbox ko wapas uncheck kar dein
          cb.checked = false;
        } finally {
          cb.disabled = false;
        }
      });
    })();
  </script>

  {% comment %}
  Renders product buy-buttons (MAIN product form below stays unchanged).
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability: {Boolean} ...
  {% endcomment %}
  <div {{ block.shopify_attributes }}>
    {%- if product != blank -%}
      {%- liquid
        assign gift_card_recipient_feature_active = false
        if block.settings.show_gift_card_recipient and product.gift_card?
          assign gift_card_recipient_feature_active = true
        endif

        assign show_dynamic_checkout = false
        if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
          assign show_dynamic_checkout = true
        endif
      -%}

      <product-form
        class="product-form"
        data-hide-errors="{{ gift_card_recipient_feature_active }}"
        data-section-id="{{ section.id }}"
      >
        <div class="product-form__error-message-wrapper" role="alert" hidden>
          <span class="svg-wrapper">
            {{- 'icon-error.svg' | inline_asset_content -}}
          </span>
          <span class="product-form__error-message"></span>
        </div>

        {%- form 'product',
          product,
          id: product_form_id,
          class: 'form',
          novalidate: 'novalidate',
          data-type: 'add-to-cart-form'
        -%}
          <input
            type="hidden"
            name="id"
            value="{{ product.selected_or_first_available_variant.id }}"
            {% if product.selected_or_first_available_variant.available == false
              or quantity_rule_soldout
              or product.selected_or_first_available_variant == null
            %}
              disabled
            {% endif %}
            class="product-variant-id"
          >

          {%- if gift_card_recipient_feature_active -%}
            {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
          {%- endif -%}

          <div class="product-form__buttons">
            {%- liquid
              assign check_against_inventory = true
              if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
                assign check_against_inventory = false
              endif
              if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                assign quantity_rule_soldout = true
              endif
            -%}
            <button
              id="ProductSubmitButton-{{ section_id }}"
              type="submit"
              name="add"
              class="product-form__submit button button--full-width {% if show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}"
              {% if product.selected_or_first_available_variant.available == false
                or quantity_rule_soldout
                or product.selected_or_first_available_variant == null
              %}
                disabled
              {% endif %}
            >
              <span>
                {%- if product.selected_or_first_available_variant == null -%}
                  {{ 'products.product.unavailable' | t }}
                {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                  {{ 'products.product.sold_out' | t }}
                {%- else -%}
                  {{ 'products.product.add_to_cart' | t }}
                {%- endif -%}
              </span>
              {%- render 'loading-spinner' -%}
            </button>
            {%- if show_dynamic_checkout -%}
              {{ form | payment_button }}
            {%- endif -%}
          </div>
        {%- endform -%}
      </product-form>
    {%- else -%}
      <div class="product-form">
        <div class="product-form__buttons form">
          <button
            type="submit"
            name="add"
            class="product-form__submit button button--full-width button--primary"
            disabled
          >
            {{ 'products.product.sold_out' | t }}
          </button>
        </div>
      </div>
    {%- endif -%}

    {%- if show_pickup_availability -%}
      {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

      {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities
        | where: 'pick_up_enabled', true
      -%}

      <pickup-availability
        class="product__pickup-availabilities quick-add-hidden"
        {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %}
          available
        {% endif %}
        data-root-url="{{ routes.root_url }}"
        data-variant-id="{{ product.selected_or_first_available_variant.id }}"
        data-has-only-default-variant="{{ product.has_only_default_variant }}"
        data-product-page-color-scheme="gradient color-{{ section.settings.color_scheme }}"
      >
        <template>
          <pickup-availability-preview class="pickup-availability-preview">
            <span class="svg-wrapper">
              {{- 'icon-unavailable.svg' | inline_asset_content -}}
            </span>
            <div class="pickup-availability-info">
              <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
              <button class="pickup-availability-button link link--text underlined-link">
                {{ 'products.product.pickup_availability.refresh' | t }}
              </button>
            </div>
          </pickup-availability-preview>
        </template>
      </pickup-availability>

      <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
  </div>

  <style>
    .upsell-wrap { margin-top: 1.5rem; }

    /* 3 columns: [check] [image] [info] */
    .upsell-card {
      display: grid;
      grid-template-columns: 44px 120px 1fr;
      gap: 1rem;
      align-items: center;
      padding: 1rem;
      border: 1px solid rgba(0,0,0,.08);
      border-radius: 14px;
      background: rgba(0,0,0,.02);
    }

    .upsell-check-col {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* Image + Info */
    .upsell-image { display:block }
    .upsell-img { width: 100%; height: auto; display: block; border-radius: 10px; }

    .upsell-title { font-size: 1rem; margin: 0 0 .25rem; line-height: 1.3; }
    .upsell-title a { text-decoration: none; }

    .upsell-price { margin: .25rem 0 .25rem; display: flex; gap: .5rem; align-items: baseline; }
    .upsell-price-was { text-decoration: line-through; opacity: .6; }
    .upsell-price-now { font-weight: 600; }

    .upsell-msg { display:block; margin-top:.35rem; opacity:.8; }

    /* Accessible visually-hidden input */
    .sr-only {
      position: absolute !important;
      width: 1px; height: 1px;
      padding: 0; margin: -1px;
      overflow: hidden; clip: rect(0,0,0,0);
      white-space: nowrap; border: 0;
    }

    /* Custom checkbox */
    .upsell-check-wrap { display:inline-flex; align-items:center; cursor: pointer; }
    .custom-check {
      display: inline-block;
      width: 22px; height: 22px;
      border-radius: 6px;
      border: 2px solid rgba(0,0,0,.35);
      background: #fff;
      position: relative;
      transition: box-shadow .2s, transform .06s, border-color .2s, background .2s;
    }
    .upsell-check-wrap:hover .custom-check { box-shadow: 0 2px 10px rgba(0,0,0,.08); }
    .upsell-check:focus + .custom-check {
      outline: 2px solid transparent;
      box-shadow: 0 0 0 3px rgba(0,0,0,.2);
    }
    .upsell-check:active + .custom-check { transform: scale(.96); }
    .upsell-check:checked + .custom-check { border-color: #111; background: #fff; }
    .custom-check::after {
      content: "";
      position: absolute;
      left: 6px; top: 2px;
      width: 6px; height: 12px;
      border-right: 2px solid #111;
      border-bottom: 2px solid #111;
      transform: rotate(45deg);
      opacity: 0;
      transition: opacity .15s ease-in-out;
    }
    .upsell-check:checked + .custom-check::after { opacity: 1; }

    .upsell-badge-soldout {
      font-size: .74rem;
      padding: .25rem .5rem;
      border-radius: 999px;
      background: rgba(0,0,0,.06);
      color: rgba(0,0,0,.7);
      text-align: center;
      display: inline-block;
      min-width: 32px;
    }

    .upsell-placeholder {
      width: 100%;
      height: 90px;
      border-radius: 10px;
      background: repeating-linear-gradient(
        45deg,
        rgba(0,0,0,.04),
        rgba(0,0,0,.04) 10px,
        rgba(0,0,0,.08) 10px,
        rgba(0,0,0,.08) 20px
      );
    }

    @media (max-width: 640px){
      .upsell-card { grid-template-columns: 38px 80px 1fr; }
    }
  </style>

{%- else -%}
  {%- comment -%}
    Debug helper: Theme Editor me (Customize) khulay to yeh hint dikhay.
  {%- endcomment -%}
  {%- if request.design_mode -%}
    <small style="display:block;margin-top:1rem;opacity:.7">
      Upsell: <code>custom.my_up_sell</code> is empty on this product. Select a product in metafield.
      <br>Value debug: <pre style="white-space:pre-wrap;margin:.25rem 0 0">{{ mf | json }}</pre>
    </small>
  {%- endif -%}
{%- endif -%}
