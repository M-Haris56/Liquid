{%- comment -%}
  Sticky Add To Cart (class-based, no section_id needed)
  - Tracks: .js-main-atc (main button) and .js-product-form (main form)
  - Falls back to generic selectors if classes not added
  - Shows at TOP on scroll when main button is out of view
{%- endcomment -%}

{%- if product and product.selected_or_first_available_variant -%}
  {%- assign v = product.selected_or_first_available_variant -%}
  {%- assign img = v.image | default: product.featured_image -%}

  <div class="sticky-atc js-sticky-atc" aria-hidden="true">
    <div class="sticky-atc__inner">
      <div class="sticky-atc__left">
        <div class="sticky-atc__media">
          {%- if img -%}
            <img
              src="{{ img | image_url: width: 160 }}"
              srcset="{{ img | image_url: width: 160 }} 1x, {{ img | image_url: width: 320 }} 2x"
              alt="{{ img.alt | default: product.title | escape }}"
              width="48" height="48"
              loading="lazy"
              class="sticky-atc__img"
              data-sticky-image
            >
          {%- else -%}
            {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg sticky-atc__img' }}
          {%- endif -%}
        </div>
        <div class="sticky-atc__meta">
          <div class="sticky-atc__title">{{ product.title }}</div>
          <div class="sticky-atc__price" data-sticky-price>
            {%- if v.compare_at_price > v.price -%}
              <s class="sticky-atc__compare">{{ v.compare_at_price | money }}</s>
            {%- endif -%}
            <span class="sticky-atc__sale">{{ v.price | money }}</span>
          </div>
        </div>
      </div>

      <div class="sticky-atc__right">
        <button type="button" class="sticky-atc__btn button">
          <span>
            {%- if v.available -%}
              {{ 'products.product.add_to_cart' | t }}
            {%- else -%}
              {{ 'products.product.sold_out' | t }}
            {%- endif -%}
          </span>
        </button>
      </div>
    </div>
  </div>

  <style>
    .sticky-atc {
      position: fixed;
      left: 0; right: 0;
      top: -100%;        /* start hidden above */
      bottom: auto;      /* we want TOP bar */
      display: none;
      opacity: 0;
      transform: translateY(-6px);
      transition: top .25s ease, opacity .2s ease, transform .25s ease;
      z-index: 60;
    }
    .sticky-atc.is-visible {
      top: 0;            /* requested: top:0 */
      bottom: auto;
      display: block;    /* requested: display:block */
      opacity: 1;        /* requested: opacity:1 */
      transform: translateY(0);
    }
    .sticky-atc__inner {
      display: flex; align-items: center; justify-content: space-between;
      gap: .75rem; padding: .75rem 1rem;
      background: var(--color-background, #fff);
      box-shadow: 0 8px 24px rgba(0,0,0,.08);
      border-bottom: 1px solid rgba(0,0,0,.06);
    }
    .sticky-atc__left { display: flex; align-items: center; gap: .75rem; min-width: 0; }
    .sticky-atc__img { width: 48px; height: 48px; object-fit: cover; border-radius: .5rem; }
    .sticky-atc__meta { display: grid; gap: .1rem; min-width: 0; }
    .sticky-atc__title {
      font-weight: 600; font-size: .95rem; line-height: 1.2;
      white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 60vw;
    }
    .sticky-atc__price { font-weight: 600; }
    .sticky-atc__compare { opacity: .6; margin-right: .35rem; }
    .sticky-atc__right { margin-left: auto; }
  </style>

  <script>
    (function() {
      const sticky   = document.querySelector('.js-sticky-atc');
      if (!sticky) return;

      const stickyBtn = sticky.querySelector('.sticky-atc__btn');
      const priceEl   = sticky.querySelector('[data-sticky-price]');
      const imageEl   = sticky.querySelector('[data-sticky-image]');

      // Main elements (prefer custom classes; fallback to theme selectors)
      const mainBtn = document.querySelector('.js-main-atc') ||
                      document.querySelector('button.product-form__submit[name="add"]');
      const form    = document.querySelector('.js-product-form') ||
                      document.querySelector('form[data-type="add-to-cart-form"]');
      const idInput = form ? form.querySelector('.product-variant-id') : null;

      // Show/Hide helpers
      const show = () => { sticky.classList.add('is-visible'); sticky.setAttribute('aria-hidden', 'false'); };
      const hide = () => { sticky.classList.remove('is-visible'); sticky.setAttribute('aria-hidden', 'true'); };

      // Toggle on scroll using IntersectionObserver if possible
      if (mainBtn && 'IntersectionObserver' in window) {
        const io = new IntersectionObserver((entries) => {
          const inView = entries[0].isIntersecting;
          if (inView) hide(); else show();
        }, { threshold: 0.01 });
        io.observe(mainBtn);
      } else {
        const toggle = () => {
          if (!mainBtn) { show(); return; }
          const r = mainBtn.getBoundingClientRect();
          const inView = r.top < window.innerHeight && r.bottom > 0;
          if (inView) hide(); else show();
        };
        window.addEventListener('scroll', toggle, { passive: true });
        toggle();
      }

      // Submit original form
      if (stickyBtn) {
        stickyBtn.addEventListener('click', function(e) {
          e.preventDefault();
          if (!form) return;
          if (typeof form.requestSubmit === 'function') form.requestSubmit();
          else form.submit();
        });
      }

      // Sync disabled/text state from main button
      const syncState = () => {
        if (!mainBtn || !stickyBtn) return;
        stickyBtn.disabled = mainBtn.hasAttribute('disabled');
        const mainText = mainBtn.querySelector('span')?.textContent?.trim();
        if (mainText) stickyBtn.querySelector('span').textContent = mainText;
      };
      syncState();
      if (mainBtn && 'MutationObserver' in window) {
        const mo = new MutationObserver(syncState);
        mo.observe(mainBtn, { attributes: true, attributeFilter: ['disabled', 'class', 'aria-busy'] });
      }

      // Money formatter
      function formatMoney(cents) {
        try {
          if (window.Shopify && Shopify.formatMoney) {
            return Shopify.formatMoney(cents, {{ shop.money_format | json }});
          }
        } catch(e){}
        return (cents / 100).toLocaleString(undefined, { style: 'currency', currency: {{ shop.currency | json }} });
      }

      // Update sticky info on variant change
      let lastId = idInput ? idInput.value : null;
      async function updateFromVariant(variantId) {
        if (!variantId) return;
        try {
          const res = await fetch('/variants/' + variantId + '.js');
          if (!res.ok) return;
          const v = await res.json();

          // price
          if (priceEl) {
            const compare = v.compare_at_price && v.compare_at_price > v.price
              ? '<s class="sticky-atc__compare">' + formatMoney(v.compare_at_price) + '</s> '
              : '';
            priceEl.innerHTML = compare + '<span class="sticky-atc__sale">' + formatMoney(v.price) + '</span>';
          }
          // image
          if (imageEl && v.featured_image && v.featured_image.src) {
            const src = v.featured_image.src;
            imageEl.src = src;
            imageEl.srcset = src + ' 1x';
            imageEl.alt = v.name || {{ product.title | json }};
          }
          // availability -> reflect on sticky button
          if (stickyBtn) {
            stickyBtn.disabled = !v.available;
            stickyBtn.querySelector('span').textContent = v.available
              ? {{ 'products.product.add_to_cart' | t | json }}
              : {{ 'products.product.sold_out' | t | json }};
          }
        } catch(e) {}
      }

      if (idInput) {
        const tick = () => {
          if (idInput.value !== lastId) {
            lastId = idInput.value;
            updateFromVariant(lastId);
          }
        };
        // robust across themes
        setInterval(tick, 400);
        idInput.addEventListener('change', tick);
      }
    })();
  </script>
{%- endif -%}
